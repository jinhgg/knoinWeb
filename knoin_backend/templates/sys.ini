# QC
[filter]
filter=/mnt/sda/fanxm/software/fastp
filter.param= \
        -a AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA \
        -i $sample.path.0 -u 10 -e 30 -w 10 \
        -o $dir.filter/$sample.name/${sample.name}.redup.fq.gz \
        -j $dir.filter/$sample.name/${sample.name}.json \
        -h $dir.filter/$sample.name/${sample.name}.html
filter.checkafter= \
        $dir.filter/$sample.name/${sample.name}.redup.fq.gz
#filter.beforescript= mkdir -p $dir.filter/$sample.name && perl /mnt/sda/fanxm/pipeline/mNGS/bin/mNGS_filterDUP.pl $sample.path.0 $dir.filter/$sample.name/${sample.name}.re.fq.gz
filter.beforescript= mkdir -p $dir.filter/$sample.name # && /mnt/sda/fanxm/bin/Rm_dup/filter -i $sample.path.0 -o $dir.filter/$sample.name/${sample.name}.re.fq.gz
filter.afterscript=perl /mnt/sda/fanxm/pipeline/mNGS/bin/ab_fastp_json.pl $dir.filter/$sample.name/${sample.name}.json $dir.filter/$sample.name/${sample.name}.qc.xls $dir.filter/$sample.name/${sample.name}.qual.xls
filter.resource=nodes=1:ppn=10

# human align
[human]
#human=/mnt/sda/fanxm/software/kraken2/kraken2
#human.param= \
#       --threads 10 --minimum-base-quality 10 --confidence 0.5 \
#        --db /mnt/sda/fanxm/database/human/hg_kadatabase \
#        --unclassified-out $dir.human/${sample.name}.unclass.fq \
#        --classified-out $dir.human/${sample.name}.class.fq \
#        --output $dir.human/${sample.name}.xls \
#        --report $dir.human/${sample.name}.report.xls \
#        $dir.filter/$sample.name/${sample.name}.redup.fq.gz
human=/mnt/sda/fanxm/software/bwa-0.7.17/bwa
human.param= \
        mem -t 10 -M -T 3 /mnt/sda/fanxm/database/human/hg38/hg38.fa \
        -R "@RG\tID:${sample.name}\tSM:${sample.name}\tPL:BGISEQ\tLB:NY\tPU:BGISEQ" \
        $dir.filter/$sample.name/${sample.name}.redup.fq.gz >$dir.human/${sample.name}.sam
human.prev=filter
human.resource=nodes=1:ppn=10

# 处理人源比对结果
#[samtools]
#samtools=/usr/local/bin/samtools
#samtools.param= \
#       view -@ 10 -f 4 $dir.human/${sample.name}.sam >$dir.human/${sample.name}.unmap.sam \
#        && /usr/local/bin/samtools fastq -@ 10 $dir.human/${sample.name}.unmap.sam >$dir.human/${sample.name}.unmap.fq \
#       && rm -fr $dir.human/${sample.name}.*sam
#samtools.prev=human
#samtools.resource=nodes=1:ppn=10

# classify病原分析
[classify]
classify=/mnt/sda/fanxm/software/kraken2/kraken2
classify.param= \
        --threads 15 --minimum-base-quality 10 --confidence 0.5 \
        --db /mnt/sda/fanxm/database/NCBI/blast/Eukaryota/Pathogen_db \
        --unclassified-out $dir.classify/${sample.name}.unclass.fq \
        --classified-out $dir.classify/${sample.name}.class.fq \
        --output $dir.classify/${sample.name}.xls \
        --report $dir.classify/${sample.name}.report.xls \
        $dir.human/${sample.name}.unmap.fq
#        $dir.human/${sample.name}.unclass.fq
# classify.beforescript= /usr/local/bin/samtools view -@ 15 -f 4 $dir.human/${sample.name}.sam >$dir.human/${sample.name}.unmap.sam && /usr/local/bin/samtools fastq -@ 15 $dir.human/${sample.name}.unmap.sam >$dir.human/${sample.name}.unmap.fq && rm -fr $dir.human/${sample.name}.unmap.sam
classify.beforescript= python3 /mnt/sda/antairan/bin/human_fillter_mul.py -i $dir.human/${sample.name}.sam -p 0.6 -o $dir.human/${sample.name}.unmap.sam -t 15 && /usr/local/bin/samtools fastq -@ 15 $dir.human/${sample.name}.unmap.sam >$dir.human/${sample.name}.unmap.fq && rm -fr $dir.human/${sample.name}.unmap.sam
classify.prev=human
classify.resource=nodes=1:ppn=15

# classify cal abundance
[classifycal]
classifycal=perl
classifycal.param= \
        /mnt/sda/fanxm/pipeline/mNGS/bin/Classify_cal_RelativeAbundanceBycount_kmerNum.pl 1 20000000 \
        $dir.classify/ctrl.report.xls \
        $dir.classify/ctrl.xls \
        $dir.classify/${sample.name}.report.xls \
        $dir.classify/${sample.name}.xls \
        $dir.classify/${sample.name}.classify_abundance_result.xls 35 3 && \
        perl /mnt/sda/fanxm/pipeline/mNGS/bin/Classify_PathAnno_byArrayPos_Com_RPM.pl \
        /mnt/sda/fanxm/database/clinical_anno/clincal_com_database.xls \
        $dir.classify/${sample.name}.classify_abundance_result.xls \
        $dir.filter/${sample.name}/${sample.name}.qc.xls \
        $dir.filter/ctrl/ctrl.qc.xls \
        $dir.classify/${sample.name}.classify_abundance_result.anno.xls && \
        perl /mnt/sda/fanxm/pipeline/mNGS/bin/Classify_cal_QC_ByReport_reHuman.pl \
        $dir.filter/${sample.name}/${sample.name}.qc.xls \
        $dir.classify/${sample.name}.xls \
        $dir.classify/${sample.name}.report.xls \
        $dir.classify/${sample.name}.classify_qc.xls
classifycal.prev=classify

[fasta]
fasta=perl
fasta.param= \
        /mnt/sda/fanxm/pipeline/mNGS/bin/Kraken2ClassFasta/tax_classify_list_andFasta.pl $dir.classify/${sample.name}.report.xls $dir.classify/${sample.name}.xls $dir.classify/${sample.name}.class.fq $dir.classify/${sample.name}_fa
fasta.beforescript= mkdir -p  $dir.classify/${sample.name}_fa
fasta.prev=classifycal

# Card RGI耐药基因分析
[res]
res=docker
res.param= \
        run --rm -v /mnt/sda/fanxm/database/res_CARD/card-data:/data \
        -v $dir.classify:/mnt -v $dir.resdir:/home knoin:rgi \
        bwt --read_one /mnt/${sample.name}.class.fq \
        --aligner bwa --threads 80 --local --clean \
        --output_file /home/${sample.name}.card
res.prev=classify
res.afterscript=rm -fr $dir.resdir/*.bam*
res.resource=nodes=1:ppn=80

# 自动化出报告模块
[autoscreen]
autoscreen=python3
autoscreen.param= \
        /mnt/sda/antairan/bin/auto_screen.py \
        -i $dir.classify/${sample.name}.classify_abundance_result.anno.xls \
        -c 15 -d 1 -f 5 --important_mic 1 -p 10 -b 5 -F 5 \
        -m /mnt/sda/antairan/project/M_control/often_appear_M.csv \
        --output_file $dir.classify/${sample.name}.classify_abundance_result.anno.auto.json
autoscreen.prev=classifycal
res.resource=nodes=1:ppn=1
